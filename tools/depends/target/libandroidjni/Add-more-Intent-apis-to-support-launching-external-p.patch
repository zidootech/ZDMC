--- a/src/Intent.cpp
+++ b/src/Intent.cpp
@@ -134,6 +134,13 @@ CJNIIntent CJNIIntent::putExtra(const std::string &name, const std::string &valu
     jcast<jhstring>(name), jcast<jhstring>(value));
 }
 
+CJNIIntent CJNIIntent::putExtra(const std::string &name, bool value)
+{
+  return (CJNIIntent)call_method<jhobject>(m_object,
+    "putExtra", "(Ljava/lang/String;Z)Landroid/content/Intent;",
+    jcast<jhstring>(name), value);
+}
+
 void CJNIIntent::addFlags(int flags)
 {
   call_method<jhobject>(m_object,
@@ -169,6 +176,12 @@ void CJNIIntent::setData(const std::string &uri)
     jcast<jhstring>(uri));
 }
 
+void CJNIIntent::setData(const CJNIURI &uri)
+{
+  call_method<jhobject>(m_object,
+    "setData", "(Landroid/net/Uri;)Landroid/content/Intent;", uri.get_raw());
+}
+
 void CJNIIntent::setDataAndType(const CJNIURI &uri, const std::string &type)
 {
   call_method<jhobject>(m_object,
diff --git a/src/Intent.h b/src/Intent.h
index 91d4322..57afe8b 100644
--- a/src/Intent.h
+++ b/src/Intent.h
@@ -47,6 +47,7 @@ public:
   bool hasCategory(const std::string &category) const;
 
   CJNIIntent putExtra(const std::string &name, const std::string &value);
+  CJNIIntent putExtra(const std::string &name, bool value);
 
   void addFlags(int flags);
   void addCategory(const std::string &category);
@@ -57,6 +58,7 @@ public:
   // Note that these are strings. We auto-convert to uri objects.
   void setDataAndType(const CJNIURI &uri, const std::string &type);
   void setData(const std::string &uri);
+  void setData(const CJNIURI &uri);
 
   void setPackage(const std::string &packageName);
   void setType(const std::string &type);
